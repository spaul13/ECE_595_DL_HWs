#Task 1
[epoch:1, batch: 2000] loss: 1.746

[epoch:1, batch: 4000] loss: 1.413

[epoch:1, batch: 6000] loss: 1.326

[epoch:1, batch: 8000] loss: 1.239

[epoch:1, batch:10000] loss: 1.180

[epoch:1, batch:12000] loss: 1.144

#Task 2
[epoch:1, batch: 2000] loss: 1.888

[epoch:1, batch: 4000] loss: 1.541

[epoch:1, batch: 6000] loss: 1.352

[epoch:1, batch: 8000] loss: 1.290

[epoch:1, batch:10000] loss: 1.187

[epoch:1, batch:12000] loss: 1.134

#Task 3

[epoch:1, batch: 2000] loss: 1.859

[epoch:1, batch: 4000] loss: 1.474

[epoch:1, batch: 6000] loss: 1.345

[epoch:1, batch: 8000] loss: 1.250

[epoch:1, batch:10000] loss: 1.160

[epoch:1, batch:12000] loss: 1.077

#confusion matrix (x = predicted_label, y= actual_label)
tensor([[586.,   6.,  59.,  17.,  22.,  11.,   1.,  11.,  46.,  12.],
        [ 76., 896.,  23.,  24.,  11.,   9.,   7.,  13.,  99., 318.],
        [ 60.,   4., 437.,  41., 131.,  31.,  32.,  20.,   4.,   4.],
        [ 34.,  15.,  95., 509., 123., 192.,  38.,  89.,  24.,  29.],
        [  3.,   1.,  18.,  11., 232.,  11.,   2.,  19.,   0.,   0.],
        [ 14.,   8., 155., 203., 127., 622.,  19., 176.,  18.,  15.],
        [ 24.,  15., 150., 160., 257.,  85., 886.,  36.,  16.,  14.],
        [  6.,   1.,  21.,   8.,  68.,  21.,   3., 610.,   3.,  11.],
        [159.,  27.,  28.,  18.,  26.,  15.,   9.,   5., 774.,  52.],
        [ 38.,  27.,  14.,   9.,   3.,   3.,   3.,  21.,  16., 545.]],
       dtype=torch.float64)

#confusion matrix (x = actual_label, y= predicted_label)
tensor([[586.,  76.,  60.,  34.,   3.,  14.,  24.,   6., 159.,  38.],
        [  6., 896.,   4.,  15.,   1.,   8.,  15.,   1.,  27.,  27.],
        [ 59.,  23., 437.,  95.,  18., 155., 150.,  21.,  28.,  14.],
        [ 17.,  24.,  41., 509.,  11., 203., 160.,   8.,  18.,   9.],
        [ 22.,  11., 131., 123., 232., 127., 257.,  68.,  26.,   3.],
        [ 11.,   9.,  31., 192.,  11., 622.,  85.,  21.,  15.,   3.],
        [  1.,   7.,  32.,  38.,   2.,  19., 886.,   3.,   9.,   3.],
        [ 11.,  13.,  20.,  89.,  19., 176.,  36., 610.,   5.,  21.],
        [ 46.,  99.,   4.,  24.,   0.,  18.,  16.,   3., 774.,  16.],
        [ 12., 318.,   4.,  29.,   0.,  15.,  14.,  11.,  52., 545.]],
       dtype=torch.float64)

